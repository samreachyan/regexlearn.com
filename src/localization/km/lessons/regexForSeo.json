{
  "lesson.regexForSeo.starter.title": "Regex សម្រាប់ SEO",
  "lesson.regexForSeo.starter.description": "Regex គឺជាសំណុំនៃកន្សោមធម្មតាដែលត្រូវបានប្រើប្រាស់ជាញឹកញាប់ក្នុងវិស័យជាច្រើន ជាពិសេសដោយមនុស្សដែលចង់បង្កើនផលិតភាពរបស់ពួកគេ។ អត្ថប្រយោជន៍នៃការប្រើប្រាស់ Regex សម្រាប់ SEO គឺថាវាធ្វើឱ្យវាកាន់តែងាយស្រួលក្នុងការវិភាគទិន្នន័យធំ និងសរសេរតម្រងកាន់តែសម្បូរបែប។ យើងសូមណែនាំឱ្យចាប់ផ្តើមជាមួយការបង្រៀន 'Regex 101' ប្រសិនបើអ្នកថ្មីចំពោះ Regex ។ \\n\\nចាប់ផ្តើមដោយវាយបញ្ចូល `OK` នៅក្នុងវាល Regex ដើម្បីបន្តទៅជំហានដំបូង និងចូលប្រើការពន្យល់លម្អិតបន្ថែមទៀត។",

  "lesson.regexForSeo.usage.title": "ការប្រើប្រាស់",
  "lesson.regexForSeo.usage.description": "អ្នកអាចប្រើ Regex សម្រាប់ SEO នៅលើវេទិកាដូចជា `Google Analytics`, `Google Data Studio`, `Google Sheets`, `Google Search Console`, `Ahrefs`, `Deepcrawl`, `Screaming Frog`។ វាក៏ត្រូវបានគេប្រើជាញឹកញាប់នៅក្នុងឯកសារ `.htaccess` និង `robots.txt (វាក្យសម្ព័ន្ធដូច regex)`។\\n\\nខាងក្រោមគឺជាគំរូ regex ដែលនឹងជ្រើសរើសតែអត្ថបទនៅក្នុងបញ្ជីដែលចាប់ផ្តើមដោយ `Google` ប៉ុណ្ណោះ",

  "lesson.regexForSeo.basics.title": "មូលដ្ឋាន",
  "lesson.regexForSeo.basics.description": "សូមក្រឡេកមើល Regexes មួយចំនួនដែលអ្នកនឹងប្រើញឹកញាប់។ យើងសូមណែនាំឱ្យអ្នកពិនិត្យមើលការបង្រៀន 'Regex 101' ដើម្បីស្វែងយល់បន្ថែមអំពីទាំងនេះ។ វាយ 'OK' ដើម្បីចាប់ផ្តើម",

  "lesson.regexForSeo.or.title": "ឈ្នាប់ ឬ `|`",
  "lesson.regexForSeo.or.description": "យើងប្រើឈ្នាប់ `|` ដើម្បីត្រងកន្សោមច្រើន។ ជាឧទាហរណ៍ ត្រងអត្ថបទដែលមាន `seo` និង `regex` ដោយសរសេរពាក្យទាំងពីរដោយបំបែកពួកវាជាមួយប្រតិបត្តិករឈ្នាប់ `|` ",

  "lesson.regexForSeo.optional.title": "ឈ្នាប់ ស្រេចចិត្ត(Optional) `?`",
  "lesson.regexForSeo.optional.description": "យើងប្រើវាដើម្បីបង្ហាញថាកន្សោម ឬតួអក្សរគឺស្រេចចិត្ត។ ឧទាហរណ៍ យើងចង់ត្រងអត្ថបទដែលមានទាំង `http` និង `https`។ យើង​អាច​ប្រើ Or operator `|` សម្រាប់​ប្រតិបត្តិការ​នេះ ប៉ុន្តែ​មាន​វិធី​ល្អ​ប្រសើរ​សម្រាប់​ពាក្យ​ដែល​ស្ទើរតែ​ដូចគ្នា​បេះបិទ។\\n\\nក្នុង​ឧទាហរណ៍​នេះ អក្សរ `s` គឺ​ជា​ជម្រើស។ ជំនួសមកវិញ សូមបន្ថែមសញ្ញាសួរ `?` ដល់ចុងអក្សរ `s`",

  "lesson.regexForSeo.any.title": "ទាំងអស់ `.*`",
  "lesson.regexForSeo.any.description": "នៅក្នុង regex រយៈពេល `.` អាចផ្គូផ្គងអ្វីទាំងអស់ រួមទាំងដកឃ្លាផងដែរ។ ប៉ុន្តែ​ការ​ប្រកួត​នេះ​គឺ​សម្រាប់​តែ​តួអក្សរ​មួយ​ដែល​វា​ត្រូវ​បាន​ប្រើ។ សញ្ញាផ្កាយ `*` មានន័យថាធាតុមុនមិនមានទាល់តែសោះ ឬកើតឡើងច្រើនជាងម្តងក្នុងអត្ថបទ។ នៅពេលប្រើទាំងពីរជាមួយគ្នា វាមានន័យថាវាអាចមានធាតុនៃប្រវែងគ្មានដែនកំណត់ដែលត្រូវបានប្រើ។\\n\\nខាងក្រោមគឺជាពាក្យគន្លឹះផ្សេងៗ។ បន្ថែម `.*` ទៅចុងបញ្ចប់នៃ regex ដើម្បីសរសេរកន្សោមដែលចាប់ផ្តើមដោយ `how to write` ហើយត្រូវគ្នានឹងអ្វីគ្រប់យ៉ាងបន្ទាប់ពីវា",

  "lesson.regexForSeo.contains.title": "មាន",
  "lesson.regexForSeo.contains.description": "ដើម្បីត្រងអត្ថបទដែលមានពាក្យ ឬឃ្លាដែលយើងកំពុងស្វែងរក យើងសរសេរពាក្យដែលយើងកំពុងស្វែងរករវាងឃ្លាទាំងពីររបស់យើង `.*` ដែលស៊ីគ្នានឹងអ្វីៗទាំងអស់។ ឧទាហរណ៍ វាយ `.*buy.*` ដើម្បីត្រងអ្វីដែលរួមបញ្ចូល `buy`",

  "lesson.regexForSeo.negated.title": "សំណុំតួអក្សរអវិជ្ជមាន `[^abc]`",
  "lesson.regexForSeo.negated.description": "យើងប្រើសំណុំតួអក្សរអវិជ្ជមាន `[^]` ដើម្បីសម្គាល់តួអក្សរដែលយើងមិនចង់បញ្ចូល។ តួ​អក្សរ​ដែល​យើង​មិន​ចង់​ដាក់​បញ្ចូល​ត្រូវ​បាន​សរសេរ​ជា​តង្កៀប​ការ៉េ​ដោយ​មាន​អក្សរ​នៅ​ខាង​ដើម។ ខាងក្រោមគឺទាំង `http` និង `https`។ ដោយសារ `http` កើតឡើងនៅក្នុងទាំងពីរ វាក៏នឹងជ្រើសរើស `https` ផងដែរ។ វាយ `[^s]` បន្ទាប់ពីអក្សរ `p` ដើម្បីមិនរាប់បញ្ចូលអក្សរ `s`",

  "lesson.regexForSeo.caret.title": "សញ្ញាសម្គាល់ `^`",
  "lesson.regexForSeo.caret.description": "ចូរនិយាយថាយើងមានបញ្ជី URLs ហើយយើងចង់ស្វែងរកតែ URLs ដែលចាប់ផ្តើមដោយ `http` ប៉ុណ្ណោះ។ ប៉ុន្តែ URLs ក៏មាន `http` នៅក្នុងផ្នែកផ្សេងៗក្រៅពីការចាប់ផ្តើមរបស់វា។ ដូច្នេះ បន្ថែមសញ្ញា `^` ទៅដើមនៃកន្សោមខាងក្រោម ដើម្បីច្រោះតែអ្នកដែលចាប់ផ្តើមដោយ `http` ប៉ុណ្ណោះ",

  "lesson.regexForSeo.dollarAndEscape.title": "សញ្ញាដុល្លារ `$` និង តួអក្សរទ្រេត `\\`",
  "lesson.regexForSeo.dollarAndEscape.description": "ជាថ្មីម្តងទៀតយើងមានបញ្ជី URLs ។ យើងចង់ស្វែងរកតែ URLs ទាំងនោះដែលបញ្ចប់ដោយ `.htm`.\n\\nចាប់តាំងពីអំឡុងពេល `.` ជាតួអក្សរពិសេសដែលត្រូវនឹងអ្វីៗគ្រប់យ៉ាង យើងត្រូវបិទរយៈពេលមុន `htm` ដោយប្រើតួអក្សរគេច `\\`។ វាអនុវត្តចំពោះតួអក្សរពិសេសទាំងអស់។\n\\nបន្ទាប់មកបន្ថែមសញ្ញា `$` ទៅចុងបញ្ចប់នៃកន្សោម។ នេះធានាថាអត្ថបទដែលត្រូវត្រងបញ្ចប់ដោយកន្សោមដែលសរសេរមុនវា។",

  "lesson.regexForSeo.limitation.title": "ការកំណត់ប្រវែង `{n}`",
  "lesson.regexForSeo.limitation.description": "យើងប្រហែលជាចង់ត្រងលទ្ធផលតាមប្រវែងតួអក្សរ។ ឧទាហរណ៍ ដើម្បីត្រង URLs ដែលមានប្រវែង `35` តួអក្សរ សូមវាយលេខដែលអ្នកចង់ប្រើសម្រាប់ប្រវែង `{35}` ដោយប្រើដង្កៀបអង្កាញ់នៅចុងបញ្ចប់នៃរយៈពេល `.` ",

  "lesson.regexForSeo.maxLimitation.title": "ការកំណត់ប្រវែងអតិបរិមា (Maximum) `{n,m}`",
  "lesson.regexForSeo.maxLimitation.description": "ដើម្បីត្រង URLs ដែលមានប្រវែងអតិបរមានៃតួអក្សរ `35` វាយ `{1,35}` តម្លៃអប្បបរមា និងអតិបរមាដែលយើងនឹងប្រើសម្រាប់ប្រវែង ដោយប្រើដង្កៀបអង្កាញ់នៅចុងបញ្ចប់នៃរយៈពេល `.` ",

  "lesson.regexForSeo.minLimitation.title": "ការកំណត់ប្រវែងអប្បរមា (Minumum) `{n,}`",
  "lesson.regexForSeo.minLimitation.description": "ដើម្បីត្រង URL ដែលមានប្រវែងអប្បបរមានៃតួអក្សរ `35` វាយ `{35,}` ដោយប្រើដង្កៀបអង្កាញ់នៅចុងបញ្ចប់នៃរយៈពេល ហើយបញ្ចប់ដោយសញ្ញាក្បៀសសម្រាប់តម្លៃលេខអប្បបរមាដែលយើងនឹងប្រើសម្រាប់ប្រវែង",

  "lesson.regexForSeo.robots.title": "robots.txt (វាក្យសម្ព័ន្ធដូច regex)",
  "lesson.regexForSeo.robots.description": "នេះគឺជាឧទាហរណ៍នៃការប្រើប្រាស់ដូច regex នៅក្នុងឯកសារ `robots.txt`។ ឧទាហរណ៍ចែងថា bots មិនគួររុករកតំណភ្ជាប់ជាមួយផ្នែកបន្ថែម 'pdf' ទេ",

  "lesson.regexForSeo.htaccess.title": ".htaccess",
  "lesson.regexForSeo.htaccess.description": "នេះគឺជាឧទាហរណ៍នៃការប្រើប្រាស់ regex នៅក្នុងឯកសារ `.htaccess`។ ក្នុងឧទាហរណ៍ តំណភ្ជាប់ផ្នែកបន្ថែម `php` ត្រូវបានបញ្ជូនទៅផ្នែកបន្ថែម `html` ដែលមានលេខកូដ `301`",

  "lesson.regexForSeo.outro.title": "Outro",
  "lesson.regexForSeo.outro.description": "ចំណេះដឹង Regex គឺជាជំនាញដែលបង្កើនផលិតភាពនៅលើវេទិកាណាមួយដែលអនុញ្ញាតឱ្យអ្នកប្រើ regex ។ នៅពេលដែលអ្នកចាប់ផ្តើមប្រើវា និងកែលម្អជំនាញនេះ វានឹងជួយអ្នកឱ្យបំពេញកិច្ចការដដែលៗជាច្រើនបានលឿន និងសន្សំសំចៃពេលវេលាសម្រាប់កិច្ចការផ្សេងទៀត។ ដើម្បីយល់កាន់តែច្បាស់អំពីមូលដ្ឋានគ្រឹះនៃ Regex អ្នកអាចចូលមើលការបង្រៀន 'Regex 101' ។ អ្នកអាចប្រើទំព័រ 'សួនកុមារ' ដើម្បីសាកល្បងកន្សោមរបស់អ្នកនៅលើអត្ថបទរបស់អ្នក"
}
